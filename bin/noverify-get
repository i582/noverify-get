#!/usr/bin/env php
<?php

$composerAutoloadPaths = [
  // Install as dependency
  __DIR__ . '/../../../autoload.php',
  __DIR__ . '/../../autoload.php',
  __DIR__ . '/../autoload.php',

  // Install as root package
  __DIR__ . '/../vendor/autoload.php',
];

foreach ($composerAutoloadPaths as $file) {
  if (is_file($file)) {
    define('RR_COMPOSER_INSTALL', $file);
    break;
  }
}

if (!defined('RR_COMPOSER_INSTALL')) {
  fwrite(STDERR, <<<'RR_CLI_ERROR'
    You need to set up the project dependencies using Composer:

        composer install

    You can learn all about Composer on https://getcomposer.org/.
    RR_CLI_ERROR
  );

  die(1);
}

require RR_COMPOSER_INSTALL;

use NoVerify\Downloader;

function main() {
  $bin_folder = str_replace("autoload.php",  "", RR_COMPOSER_INSTALL) . "bin";
  try {
    $opts = getopt("", ["version:", "versions"]);
    if ($opts === false) {
      echo "error CLI";
    }

    if (isset($opts["versions"])) {
      echo "Available version for download:\n  ";
      echo join(",\n  ", Downloader::VERSIONS) . "\n";
      return;
    }

    if (!isset($opts["version"])) {
      $opts["version"] = "latest";
    }

    $version = $opts["version"];
    $version = trim($version);
    if ($version === "") {
      echo "Error: empty version\n";
      die(1);
    }

    Downloader::process($bin_folder, $version);
  } catch (Exception $e) {
    echo $e->getMessage() . "\n";
    die(1);
  }
}

main();